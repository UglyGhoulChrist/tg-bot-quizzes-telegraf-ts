import { Context, Telegraf } from "telegraf";
import { getUserState } from "../states/userStates";
import { IUserState } from "../states/interface.userState";
import { appendError } from "../loggers/appendError";

export async function completionSender(bot: Telegraf<Context>, userId: number) {
    const userState: IUserState = getUserState(userId);
    const chatId: number = userState.chatId;

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
    try {
        await bot.telegram.sendMessage(
            chatId,
            `–£—Ä–∞! –¢—ã –ø—Ä–æ—à—ë–ª –≤—Å—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –∏ –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ ${userState.lengthListQuestions} –≤–æ–ø—Ä–æ—Å–æ–≤!
–¢–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${userState.counterCorrectAnswers} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤. –¢—ã –º–æ–ª–æ–¥–µ—Ü!
–•–æ—á–µ—à—å —É–ª—É—á—à–∏—Ç—å —Å–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç? –ù–∞–∂–º–∏ /start –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞! üèÜ`,
        );
    } catch (error) {
        appendError(error as NodeJS.ErrnoException);
    }
}
